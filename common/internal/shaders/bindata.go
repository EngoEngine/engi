// Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// blendmap/frag.spv
// blendmap/vert.spv
// default/frag.spv
// default/vert.spv
// legacy/frag.spv
// legacy/vert.spv
// text/frag.spv
// text/vert.spv
package shaders

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _blendmapFragSpv = []byte("\x03\x02#\a\x00\x00\x01\x00\a\x00\b\x00\x17\x00\x00\x00\x00\x00\x00\x00\x11\x00\x02\x00\x01\x00\x00\x00\v\x00\x06\x00\x01\x00\x00\x00GLSL.std.450\x00\x00\x00\x00\x0e\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00\x0f\x00\b\x00\x04\x00\x00\x00\x04\x00\x00\x00main\x00\x00\x00\x00\t\x00\x00\x00\x11\x00\x00\x00\x16\x00\x00\x00\x10\x00\x03\x00\x04\x00\x00\x00\a\x00\x00\x00\x03\x00\x03\x00\x02\x00\x00\x00\xc2\x01\x00\x00\x04\x00\t\x00GL_ARB_separate_shader_objects\x00\x00\x05\x00\x04\x00\x04\x00\x00\x00main\x00\x00\x00\x00\x05\x00\x05\x00\t\x00\x00\x00outColor\x00\x00\x00\x00\x05\x00\x05\x00\r\x00\x00\x00texSampler\x00\x00\x05\x00\x06\x00\x11\x00\x00\x00fragTexCoord\x00\x00\x00\x00\x05\x00\x05\x00\x16\x00\x00\x00fragColor\x00\x00\x00G\x00\x04\x00\t\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\r\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\r\x00\x00\x00!\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x00\x11\x00\x00\x00\x1e\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x00\x16\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x13\x00\x02\x00\x02\x00\x00\x00!\x00\x03\x00\x03\x00\x00\x00\x02\x00\x00\x00\x16\x00\x03\x00\x06\x00\x00\x00 \x00\x00\x00\x17\x00\x04\x00\a\x00\x00\x00\x06\x00\x00\x00\x04\x00\x00\x00 \x00\x04\x00\b\x00\x00\x00\x03\x00\x00\x00\a\x00\x00\x00;\x00\x04\x00\b\x00\x00\x00\t\x00\x00\x00\x03\x00\x00\x00\x19\x00\t\x00\n\x00\x00\x00\x06\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x03\x00\v\x00\x00\x00\n\x00\x00\x00 \x00\x04\x00\f\x00\x00\x00\x00\x00\x00\x00\v\x00\x00\x00;\x00\x04\x00\f\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x17\x00\x04\x00\x0f\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00 \x00\x04\x00\x10\x00\x00\x00\x01\x00\x00\x00\x0f\x00\x00\x00;\x00\x04\x00\x10\x00\x00\x00\x11\x00\x00\x00\x01\x00\x00\x00\x17\x00\x04\x00\x14\x00\x00\x00\x06\x00\x00\x00\x03\x00\x00\x00 \x00\x04\x00\x15\x00\x00\x00\x01\x00\x00\x00\x14\x00\x00\x00;\x00\x04\x00\x15\x00\x00\x00\x16\x00\x00\x00\x01\x00\x00\x006\x00\x05\x00\x02\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\xf8\x00\x02\x00\x05\x00\x00\x00=\x00\x04\x00\v\x00\x00\x00\x0e\x00\x00\x00\r\x00\x00\x00=\x00\x04\x00\x0f\x00\x00\x00\x12\x00\x00\x00\x11\x00\x00\x00W\x00\x05\x00\a\x00\x00\x00\x13\x00\x00\x00\x0e\x00\x00\x00\x12\x00\x00\x00>\x00\x03\x00\t\x00\x00\x00\x13\x00\x00\x00\xfd\x00\x01\x008\x00\x01\x00")

func blendmapFragSpvBytes() ([]byte, error) {
	return _blendmapFragSpv, nil
}

func blendmapFragSpv() (*asset, error) {
	bytes, err := blendmapFragSpvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "blendmap/frag.spv", size: 692, mode: os.FileMode(420), modTime: time.Unix(1592157069, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _blendmapVertSpv = []byte("\x03\x02#\a\x00\x00\x01\x00\a\x00\b\x005\x00\x00\x00\x00\x00\x00\x00\x11\x00\x02\x00\x01\x00\x00\x00\v\x00\x06\x00\x01\x00\x00\x00GLSL.std.450\x00\x00\x00\x00\x0e\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00\x0f\x00\v\x00\x00\x00\x00\x00\x04\x00\x00\x00main\x00\x00\x00\x00\r\x00\x00\x00!\x00\x00\x00-\x00\x00\x00/\x00\x00\x002\x00\x00\x003\x00\x00\x00\x03\x00\x03\x00\x02\x00\x00\x00\xc2\x01\x00\x00\x04\x00\t\x00GL_ARB_separate_shader_objects\x00\x00\x05\x00\x04\x00\x04\x00\x00\x00main\x00\x00\x00\x00\x05\x00\x06\x00\v\x00\x00\x00gl_PerVertex\x00\x00\x00\x00\x06\x00\x06\x00\v\x00\x00\x00\x00\x00\x00\x00gl_Position\x00\x06\x00\a\x00\v\x00\x00\x00\x01\x00\x00\x00gl_PointSize\x00\x00\x00\x00\x06\x00\a\x00\v\x00\x00\x00\x02\x00\x00\x00gl_ClipDistance\x00\x06\x00\a\x00\v\x00\x00\x00\x03\x00\x00\x00gl_CullDistance\x00\x05\x00\x03\x00\r\x00\x00\x00\x00\x00\x00\x00\x05\x00\a\x00\x11\x00\x00\x00UniformBufferObject\x00\x06\x00\x05\x00\x11\x00\x00\x00\x00\x00\x00\x00model\x00\x00\x00\x06\x00\x05\x00\x11\x00\x00\x00\x01\x00\x00\x00view\x00\x00\x00\x00\x06\x00\x05\x00\x11\x00\x00\x00\x02\x00\x00\x00proj\x00\x00\x00\x00\x05\x00\x03\x00\x13\x00\x00\x00ubo\x00\x05\x00\x05\x00!\x00\x00\x00inPosition\x00\x00\x05\x00\x05\x00-\x00\x00\x00fragColor\x00\x00\x00\x05\x00\x04\x00/\x00\x00\x00inColor\x00\x05\x00\x06\x002\x00\x00\x00fragTexCoord\x00\x00\x00\x00\x05\x00\x05\x003\x00\x00\x00inTexCoord\x00\x00H\x00\x05\x00\v\x00\x00\x00\x00\x00\x00\x00\v\x00\x00\x00\x00\x00\x00\x00H\x00\x05\x00\v\x00\x00\x00\x01\x00\x00\x00\v\x00\x00\x00\x01\x00\x00\x00H\x00\x05\x00\v\x00\x00\x00\x02\x00\x00\x00\v\x00\x00\x00\x03\x00\x00\x00H\x00\x05\x00\v\x00\x00\x00\x03\x00\x00\x00\v\x00\x00\x00\x04\x00\x00\x00G\x00\x03\x00\v\x00\x00\x00\x02\x00\x00\x00H\x00\x04\x00\x11\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x00\x00\x00\x00\a\x00\x00\x00\x10\x00\x00\x00H\x00\x04\x00\x11\x00\x00\x00\x01\x00\x00\x00\x05\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x00@\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x01\x00\x00\x00\a\x00\x00\x00\x10\x00\x00\x00H\x00\x04\x00\x11\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x02\x00\x00\x00#\x00\x00\x00\x80\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x02\x00\x00\x00\a\x00\x00\x00\x10\x00\x00\x00G\x00\x03\x00\x11\x00\x00\x00\x02\x00\x00\x00G\x00\x04\x00\x13\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\x13\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00!\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00-\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00/\x00\x00\x00\x1e\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x002\x00\x00\x00\x1e\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x003\x00\x00\x00\x1e\x00\x00\x00\x02\x00\x00\x00\x13\x00\x02\x00\x02\x00\x00\x00!\x00\x03\x00\x03\x00\x00\x00\x02\x00\x00\x00\x16\x00\x03\x00\x06\x00\x00\x00 \x00\x00\x00\x17\x00\x04\x00\a\x00\x00\x00\x06\x00\x00\x00\x04\x00\x00\x00\x15\x00\x04\x00\b\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00+\x00\x04\x00\b\x00\x00\x00\t\x00\x00\x00\x01\x00\x00\x00\x1c\x00\x04\x00\n\x00\x00\x00\x06\x00\x00\x00\t\x00\x00\x00\x1e\x00\x06\x00\v\x00\x00\x00\a\x00\x00\x00\x06\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00 \x00\x04\x00\f\x00\x00\x00\x03\x00\x00\x00\v\x00\x00\x00;\x00\x04\x00\f\x00\x00\x00\r\x00\x00\x00\x03\x00\x00\x00\x15\x00\x04\x00\x0e\x00\x00\x00 \x00\x00\x00\x01\x00\x00\x00+\x00\x04\x00\x0e\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x18\x00\x04\x00\x10\x00\x00\x00\a\x00\x00\x00\x04\x00\x00\x00\x1e\x00\x05\x00\x11\x00\x00\x00\x10\x00\x00\x00\x10\x00\x00\x00\x10\x00\x00\x00 \x00\x04\x00\x12\x00\x00\x00\x02\x00\x00\x00\x11\x00\x00\x00;\x00\x04\x00\x12\x00\x00\x00\x13\x00\x00\x00\x02\x00\x00\x00+\x00\x04\x00\x0e\x00\x00\x00\x14\x00\x00\x00\x02\x00\x00\x00 \x00\x04\x00\x15\x00\x00\x00\x02\x00\x00\x00\x10\x00\x00\x00+\x00\x04\x00\x0e\x00\x00\x00\x18\x00\x00\x00\x01\x00\x00\x00\x17\x00\x04\x00\x1f\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00 \x00\x04\x00 \x00\x00\x00\x01\x00\x00\x00\x1f\x00\x00\x00;\x00\x04\x00 \x00\x00\x00!\x00\x00\x00\x01\x00\x00\x00+\x00\x04\x00\x06\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00+\x00\x04\x00\x06\x00\x00\x00$\x00\x00\x00\x00\x00\x80? \x00\x04\x00)\x00\x00\x00\x03\x00\x00\x00\a\x00\x00\x00\x17\x00\x04\x00+\x00\x00\x00\x06\x00\x00\x00\x03\x00\x00\x00 \x00\x04\x00,\x00\x00\x00\x03\x00\x00\x00+\x00\x00\x00;\x00\x04\x00,\x00\x00\x00-\x00\x00\x00\x03\x00\x00\x00 \x00\x04\x00.\x00\x00\x00\x01\x00\x00\x00+\x00\x00\x00;\x00\x04\x00.\x00\x00\x00/\x00\x00\x00\x01\x00\x00\x00 \x00\x04\x001\x00\x00\x00\x03\x00\x00\x00\x1f\x00\x00\x00;\x00\x04\x001\x00\x00\x002\x00\x00\x00\x03\x00\x00\x00;\x00\x04\x00 \x00\x00\x003\x00\x00\x00\x01\x00\x00\x006\x00\x05\x00\x02\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\xf8\x00\x02\x00\x05\x00\x00\x00A\x00\x05\x00\x15\x00\x00\x00\x16\x00\x00\x00\x13\x00\x00\x00\x14\x00\x00\x00=\x00\x04\x00\x10\x00\x00\x00\x17\x00\x00\x00\x16\x00\x00\x00A\x00\x05\x00\x15\x00\x00\x00\x19\x00\x00\x00\x13\x00\x00\x00\x18\x00\x00\x00=\x00\x04\x00\x10\x00\x00\x00\x1a\x00\x00\x00\x19\x00\x00\x00\x92\x00\x05\x00\x10\x00\x00\x00\x1b\x00\x00\x00\x17\x00\x00\x00\x1a\x00\x00\x00A\x00\x05\x00\x15\x00\x00\x00\x1c\x00\x00\x00\x13\x00\x00\x00\x0f\x00\x00\x00=\x00\x04\x00\x10\x00\x00\x00\x1d\x00\x00\x00\x1c\x00\x00\x00\x92\x00\x05\x00\x10\x00\x00\x00\x1e\x00\x00\x00\x1b\x00\x00\x00\x1d\x00\x00\x00=\x00\x04\x00\x1f\x00\x00\x00\"\x00\x00\x00!\x00\x00\x00Q\x00\x05\x00\x06\x00\x00\x00%\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00Q\x00\x05\x00\x06\x00\x00\x00&\x00\x00\x00\"\x00\x00\x00\x01\x00\x00\x00P\x00\a\x00\a\x00\x00\x00'\x00\x00\x00%\x00\x00\x00&\x00\x00\x00#\x00\x00\x00$\x00\x00\x00\x91\x00\x05\x00\a\x00\x00\x00(\x00\x00\x00\x1e\x00\x00\x00'\x00\x00\x00A\x00\x05\x00)\x00\x00\x00*\x00\x00\x00\r\x00\x00\x00\x0f\x00\x00\x00>\x00\x03\x00*\x00\x00\x00(\x00\x00\x00=\x00\x04\x00+\x00\x00\x000\x00\x00\x00/\x00\x00\x00>\x00\x03\x00-\x00\x00\x000\x00\x00\x00=\x00\x04\x00\x1f\x00\x00\x004\x00\x00\x003\x00\x00\x00>\x00\x03\x002\x00\x00\x004\x00\x00\x00\xfd\x00\x01\x008\x00\x01\x00")

func blendmapVertSpvBytes() ([]byte, error) {
	return _blendmapVertSpv, nil
}

func blendmapVertSpv() (*asset, error) {
	bytes, err := blendmapVertSpvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "blendmap/vert.spv", size: 1800, mode: os.FileMode(420), modTime: time.Unix(1592157069, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _defaultFragSpv = []byte("\x03\x02#\a\x00\x00\x01\x00\a\x00\b\x00\x18\x00\x00\x00\x00\x00\x00\x00\x11\x00\x02\x00\x01\x00\x00\x00\v\x00\x06\x00\x01\x00\x00\x00GLSL.std.450\x00\x00\x00\x00\x0e\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00\x0f\x00\b\x00\x04\x00\x00\x00\x04\x00\x00\x00main\x00\x00\x00\x00\t\x00\x00\x00\v\x00\x00\x00\x14\x00\x00\x00\x10\x00\x03\x00\x04\x00\x00\x00\a\x00\x00\x00\x03\x00\x03\x00\x02\x00\x00\x00\xc2\x01\x00\x00\x04\x00\t\x00GL_ARB_separate_shader_objects\x00\x00\x05\x00\x04\x00\x04\x00\x00\x00main\x00\x00\x00\x00\x05\x00\x05\x00\t\x00\x00\x00outColor\x00\x00\x00\x00\x05\x00\x05\x00\v\x00\x00\x00fragColor\x00\x00\x00\x05\x00\x05\x00\x10\x00\x00\x00texSampler\x00\x00\x05\x00\x06\x00\x14\x00\x00\x00fragTexCoord\x00\x00\x00\x00G\x00\x04\x00\t\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\v\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\x10\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\x10\x00\x00\x00!\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x00\x14\x00\x00\x00\x1e\x00\x00\x00\x01\x00\x00\x00\x13\x00\x02\x00\x02\x00\x00\x00!\x00\x03\x00\x03\x00\x00\x00\x02\x00\x00\x00\x16\x00\x03\x00\x06\x00\x00\x00 \x00\x00\x00\x17\x00\x04\x00\a\x00\x00\x00\x06\x00\x00\x00\x04\x00\x00\x00 \x00\x04\x00\b\x00\x00\x00\x03\x00\x00\x00\a\x00\x00\x00;\x00\x04\x00\b\x00\x00\x00\t\x00\x00\x00\x03\x00\x00\x00 \x00\x04\x00\n\x00\x00\x00\x01\x00\x00\x00\a\x00\x00\x00;\x00\x04\x00\n\x00\x00\x00\v\x00\x00\x00\x01\x00\x00\x00\x19\x00\t\x00\r\x00\x00\x00\x06\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x03\x00\x0e\x00\x00\x00\r\x00\x00\x00 \x00\x04\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00;\x00\x04\x00\x0f\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x17\x00\x04\x00\x12\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00 \x00\x04\x00\x13\x00\x00\x00\x01\x00\x00\x00\x12\x00\x00\x00;\x00\x04\x00\x13\x00\x00\x00\x14\x00\x00\x00\x01\x00\x00\x006\x00\x05\x00\x02\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\xf8\x00\x02\x00\x05\x00\x00\x00=\x00\x04\x00\a\x00\x00\x00\f\x00\x00\x00\v\x00\x00\x00=\x00\x04\x00\x0e\x00\x00\x00\x11\x00\x00\x00\x10\x00\x00\x00=\x00\x04\x00\x12\x00\x00\x00\x15\x00\x00\x00\x14\x00\x00\x00W\x00\x05\x00\a\x00\x00\x00\x16\x00\x00\x00\x11\x00\x00\x00\x15\x00\x00\x00\x85\x00\x05\x00\a\x00\x00\x00\x17\x00\x00\x00\f\x00\x00\x00\x16\x00\x00\x00>\x00\x03\x00\t\x00\x00\x00\x17\x00\x00\x00\xfd\x00\x01\x008\x00\x01\x00")

func defaultFragSpvBytes() ([]byte, error) {
	return _defaultFragSpv, nil
}

func defaultFragSpv() (*asset, error) {
	bytes, err := defaultFragSpvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default/frag.spv", size: 712, mode: os.FileMode(420), modTime: time.Unix(1592157069, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _defaultVertSpv = []byte("\x03\x02#\a\x00\x00\x01\x00\a\x00\b\x007\x00\x00\x00\x00\x00\x00\x00\x11\x00\x02\x00\x01\x00\x00\x00\v\x00\x06\x00\x01\x00\x00\x00GLSL.std.450\x00\x00\x00\x00\x0e\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00\x0f\x00\v\x00\x00\x00\x00\x00\x04\x00\x00\x00main\x00\x00\x00\x00\t\x00\x00\x00\v\x00\x00\x00\x0f\x00\x00\x00\x11\x00\x00\x00\x1f\x00\x00\x00+\x00\x00\x00\x03\x00\x03\x00\x02\x00\x00\x00\xc2\x01\x00\x00\x04\x00\t\x00GL_ARB_separate_shader_objects\x00\x00\x05\x00\x04\x00\x04\x00\x00\x00main\x00\x00\x00\x00\x05\x00\x05\x00\t\x00\x00\x00var_Color\x00\x00\x00\x05\x00\x05\x00\v\x00\x00\x00in_Color\x00\x00\x00\x00\x05\x00\x06\x00\x0f\x00\x00\x00var_TexCoords\x00\x00\x00\x05\x00\x06\x00\x11\x00\x00\x00in_TexCoords\x00\x00\x00\x00\x05\x00\x04\x00\x15\x00\x00\x00matr\x00\x00\x00\x00\x05\x00\a\x00\x17\x00\x00\x00UniformBufferObject\x00\x06\x00\x04\x00\x17\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x05\x00\x06\x00\x19\x00\x00\x00matrixProjView\x00\x00\x05\x00\x05\x00\x1f\x00\x00\x00in_Position\x00\x05\x00\x06\x00)\x00\x00\x00gl_PerVertex\x00\x00\x00\x00\x06\x00\x06\x00)\x00\x00\x00\x00\x00\x00\x00gl_Position\x00\x06\x00\a\x00)\x00\x00\x00\x01\x00\x00\x00gl_PointSize\x00\x00\x00\x00\x06\x00\a\x00)\x00\x00\x00\x02\x00\x00\x00gl_ClipDistance\x00\x06\x00\a\x00)\x00\x00\x00\x03\x00\x00\x00gl_CullDistance\x00\x05\x00\x03\x00+\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\t\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\v\x00\x00\x00\x1e\x00\x00\x00\x02\x00\x00\x00G\x00\x04\x00\x0f\x00\x00\x00\x1e\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x00\x11\x00\x00\x00\x1e\x00\x00\x00\x01\x00\x00\x00H\x00\x04\x00\x17\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00H\x00\x05\x00\x17\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00H\x00\x05\x00\x17\x00\x00\x00\x00\x00\x00\x00\a\x00\x00\x00\x10\x00\x00\x00G\x00\x03\x00\x17\x00\x00\x00\x02\x00\x00\x00G\x00\x04\x00\x19\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\x19\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\x1f\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00H\x00\x05\x00)\x00\x00\x00\x00\x00\x00\x00\v\x00\x00\x00\x00\x00\x00\x00H\x00\x05\x00)\x00\x00\x00\x01\x00\x00\x00\v\x00\x00\x00\x01\x00\x00\x00H\x00\x05\x00)\x00\x00\x00\x02\x00\x00\x00\v\x00\x00\x00\x03\x00\x00\x00H\x00\x05\x00)\x00\x00\x00\x03\x00\x00\x00\v\x00\x00\x00\x04\x00\x00\x00G\x00\x03\x00)\x00\x00\x00\x02\x00\x00\x00\x13\x00\x02\x00\x02\x00\x00\x00!\x00\x03\x00\x03\x00\x00\x00\x02\x00\x00\x00\x16\x00\x03\x00\x06\x00\x00\x00 \x00\x00\x00\x17\x00\x04\x00\a\x00\x00\x00\x06\x00\x00\x00\x04\x00\x00\x00 \x00\x04\x00\b\x00\x00\x00\x03\x00\x00\x00\a\x00\x00\x00;\x00\x04\x00\b\x00\x00\x00\t\x00\x00\x00\x03\x00\x00\x00 \x00\x04\x00\n\x00\x00\x00\x01\x00\x00\x00\a\x00\x00\x00;\x00\x04\x00\n\x00\x00\x00\v\x00\x00\x00\x01\x00\x00\x00\x17\x00\x04\x00\r\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00 \x00\x04\x00\x0e\x00\x00\x00\x03\x00\x00\x00\r\x00\x00\x00;\x00\x04\x00\x0e\x00\x00\x00\x0f\x00\x00\x00\x03\x00\x00\x00 \x00\x04\x00\x10\x00\x00\x00\x01\x00\x00\x00\r\x00\x00\x00;\x00\x04\x00\x10\x00\x00\x00\x11\x00\x00\x00\x01\x00\x00\x00\x17\x00\x04\x00\x13\x00\x00\x00\x06\x00\x00\x00\x03\x00\x00\x00 \x00\x04\x00\x14\x00\x00\x00\a\x00\x00\x00\x13\x00\x00\x00\x18\x00\x04\x00\x16\x00\x00\x00\x13\x00\x00\x00\x03\x00\x00\x00\x1e\x00\x03\x00\x17\x00\x00\x00\x16\x00\x00\x00 \x00\x04\x00\x18\x00\x00\x00\x02\x00\x00\x00\x17\x00\x00\x00;\x00\x04\x00\x18\x00\x00\x00\x19\x00\x00\x00\x02\x00\x00\x00\x15\x00\x04\x00\x1a\x00\x00\x00 \x00\x00\x00\x01\x00\x00\x00+\x00\x04\x00\x1a\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00 \x00\x04\x00\x1c\x00\x00\x00\x02\x00\x00\x00\x16\x00\x00\x00;\x00\x04\x00\x10\x00\x00\x00\x1f\x00\x00\x00\x01\x00\x00\x00+\x00\x04\x00\x06\x00\x00\x00!\x00\x00\x00\x00\x00\x80?\x15\x00\x04\x00&\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00+\x00\x04\x00&\x00\x00\x00'\x00\x00\x00\x01\x00\x00\x00\x1c\x00\x04\x00(\x00\x00\x00\x06\x00\x00\x00'\x00\x00\x00\x1e\x00\x06\x00)\x00\x00\x00\a\x00\x00\x00\x06\x00\x00\x00(\x00\x00\x00(\x00\x00\x00 \x00\x04\x00*\x00\x00\x00\x03\x00\x00\x00)\x00\x00\x00;\x00\x04\x00*\x00\x00\x00+\x00\x00\x00\x03\x00\x00\x00+\x00\x04\x00\x06\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00+\x00\x04\x00&\x00\x00\x00/\x00\x00\x00\x02\x00\x00\x00 \x00\x04\x000\x00\x00\x00\a\x00\x00\x00\x06\x00\x00\x006\x00\x05\x00\x02\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\xf8\x00\x02\x00\x05\x00\x00\x00;\x00\x04\x00\x14\x00\x00\x00\x15\x00\x00\x00\a\x00\x00\x00=\x00\x04\x00\a\x00\x00\x00\f\x00\x00\x00\v\x00\x00\x00>\x00\x03\x00\t\x00\x00\x00\f\x00\x00\x00=\x00\x04\x00\r\x00\x00\x00\x12\x00\x00\x00\x11\x00\x00\x00>\x00\x03\x00\x0f\x00\x00\x00\x12\x00\x00\x00A\x00\x05\x00\x1c\x00\x00\x00\x1d\x00\x00\x00\x19\x00\x00\x00\x1b\x00\x00\x00=\x00\x04\x00\x16\x00\x00\x00\x1e\x00\x00\x00\x1d\x00\x00\x00=\x00\x04\x00\r\x00\x00\x00 \x00\x00\x00\x1f\x00\x00\x00Q\x00\x05\x00\x06\x00\x00\x00\"\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00Q\x00\x05\x00\x06\x00\x00\x00#\x00\x00\x00 \x00\x00\x00\x01\x00\x00\x00P\x00\x06\x00\x13\x00\x00\x00$\x00\x00\x00\"\x00\x00\x00#\x00\x00\x00!\x00\x00\x00\x91\x00\x05\x00\x13\x00\x00\x00%\x00\x00\x00\x1e\x00\x00\x00$\x00\x00\x00>\x00\x03\x00\x15\x00\x00\x00%\x00\x00\x00=\x00\x04\x00\x13\x00\x00\x00,\x00\x00\x00\x15\x00\x00\x00O\x00\a\x00\r\x00\x00\x00-\x00\x00\x00,\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00A\x00\x05\x000\x00\x00\x001\x00\x00\x00\x15\x00\x00\x00/\x00\x00\x00=\x00\x04\x00\x06\x00\x00\x002\x00\x00\x001\x00\x00\x00Q\x00\x05\x00\x06\x00\x00\x003\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00Q\x00\x05\x00\x06\x00\x00\x004\x00\x00\x00-\x00\x00\x00\x01\x00\x00\x00P\x00\a\x00\a\x00\x00\x005\x00\x00\x003\x00\x00\x004\x00\x00\x00.\x00\x00\x002\x00\x00\x00A\x00\x05\x00\b\x00\x00\x006\x00\x00\x00+\x00\x00\x00\x1b\x00\x00\x00>\x00\x03\x006\x00\x00\x005\x00\x00\x00\xfd\x00\x01\x008\x00\x01\x00")

func defaultVertSpvBytes() ([]byte, error) {
	return _defaultVertSpv, nil
}

func defaultVertSpv() (*asset, error) {
	bytes, err := defaultVertSpvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default/vert.spv", size: 1732, mode: os.FileMode(420), modTime: time.Unix(1592157069, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _legacyFragSpv = []byte("\x03\x02#\a\x00\x00\x01\x00\a\x00\b\x00\x17\x00\x00\x00\x00\x00\x00\x00\x11\x00\x02\x00\x01\x00\x00\x00\v\x00\x06\x00\x01\x00\x00\x00GLSL.std.450\x00\x00\x00\x00\x0e\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00\x0f\x00\b\x00\x04\x00\x00\x00\x04\x00\x00\x00main\x00\x00\x00\x00\t\x00\x00\x00\x11\x00\x00\x00\x16\x00\x00\x00\x10\x00\x03\x00\x04\x00\x00\x00\a\x00\x00\x00\x03\x00\x03\x00\x02\x00\x00\x00\xc2\x01\x00\x00\x04\x00\t\x00GL_ARB_separate_shader_objects\x00\x00\x05\x00\x04\x00\x04\x00\x00\x00main\x00\x00\x00\x00\x05\x00\x05\x00\t\x00\x00\x00outColor\x00\x00\x00\x00\x05\x00\x05\x00\r\x00\x00\x00texSampler\x00\x00\x05\x00\x06\x00\x11\x00\x00\x00fragTexCoord\x00\x00\x00\x00\x05\x00\x05\x00\x16\x00\x00\x00fragColor\x00\x00\x00G\x00\x04\x00\t\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\r\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\r\x00\x00\x00!\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x00\x11\x00\x00\x00\x1e\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x00\x16\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x13\x00\x02\x00\x02\x00\x00\x00!\x00\x03\x00\x03\x00\x00\x00\x02\x00\x00\x00\x16\x00\x03\x00\x06\x00\x00\x00 \x00\x00\x00\x17\x00\x04\x00\a\x00\x00\x00\x06\x00\x00\x00\x04\x00\x00\x00 \x00\x04\x00\b\x00\x00\x00\x03\x00\x00\x00\a\x00\x00\x00;\x00\x04\x00\b\x00\x00\x00\t\x00\x00\x00\x03\x00\x00\x00\x19\x00\t\x00\n\x00\x00\x00\x06\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x03\x00\v\x00\x00\x00\n\x00\x00\x00 \x00\x04\x00\f\x00\x00\x00\x00\x00\x00\x00\v\x00\x00\x00;\x00\x04\x00\f\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x17\x00\x04\x00\x0f\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00 \x00\x04\x00\x10\x00\x00\x00\x01\x00\x00\x00\x0f\x00\x00\x00;\x00\x04\x00\x10\x00\x00\x00\x11\x00\x00\x00\x01\x00\x00\x00\x17\x00\x04\x00\x14\x00\x00\x00\x06\x00\x00\x00\x03\x00\x00\x00 \x00\x04\x00\x15\x00\x00\x00\x01\x00\x00\x00\x14\x00\x00\x00;\x00\x04\x00\x15\x00\x00\x00\x16\x00\x00\x00\x01\x00\x00\x006\x00\x05\x00\x02\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\xf8\x00\x02\x00\x05\x00\x00\x00=\x00\x04\x00\v\x00\x00\x00\x0e\x00\x00\x00\r\x00\x00\x00=\x00\x04\x00\x0f\x00\x00\x00\x12\x00\x00\x00\x11\x00\x00\x00W\x00\x05\x00\a\x00\x00\x00\x13\x00\x00\x00\x0e\x00\x00\x00\x12\x00\x00\x00>\x00\x03\x00\t\x00\x00\x00\x13\x00\x00\x00\xfd\x00\x01\x008\x00\x01\x00")

func legacyFragSpvBytes() ([]byte, error) {
	return _legacyFragSpv, nil
}

func legacyFragSpv() (*asset, error) {
	bytes, err := legacyFragSpvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "legacy/frag.spv", size: 692, mode: os.FileMode(420), modTime: time.Unix(1592157069, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _legacyVertSpv = []byte("\x03\x02#\a\x00\x00\x01\x00\a\x00\b\x005\x00\x00\x00\x00\x00\x00\x00\x11\x00\x02\x00\x01\x00\x00\x00\v\x00\x06\x00\x01\x00\x00\x00GLSL.std.450\x00\x00\x00\x00\x0e\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00\x0f\x00\v\x00\x00\x00\x00\x00\x04\x00\x00\x00main\x00\x00\x00\x00\r\x00\x00\x00!\x00\x00\x00-\x00\x00\x00/\x00\x00\x002\x00\x00\x003\x00\x00\x00\x03\x00\x03\x00\x02\x00\x00\x00\xc2\x01\x00\x00\x04\x00\t\x00GL_ARB_separate_shader_objects\x00\x00\x05\x00\x04\x00\x04\x00\x00\x00main\x00\x00\x00\x00\x05\x00\x06\x00\v\x00\x00\x00gl_PerVertex\x00\x00\x00\x00\x06\x00\x06\x00\v\x00\x00\x00\x00\x00\x00\x00gl_Position\x00\x06\x00\a\x00\v\x00\x00\x00\x01\x00\x00\x00gl_PointSize\x00\x00\x00\x00\x06\x00\a\x00\v\x00\x00\x00\x02\x00\x00\x00gl_ClipDistance\x00\x06\x00\a\x00\v\x00\x00\x00\x03\x00\x00\x00gl_CullDistance\x00\x05\x00\x03\x00\r\x00\x00\x00\x00\x00\x00\x00\x05\x00\a\x00\x11\x00\x00\x00UniformBufferObject\x00\x06\x00\x05\x00\x11\x00\x00\x00\x00\x00\x00\x00model\x00\x00\x00\x06\x00\x05\x00\x11\x00\x00\x00\x01\x00\x00\x00view\x00\x00\x00\x00\x06\x00\x05\x00\x11\x00\x00\x00\x02\x00\x00\x00proj\x00\x00\x00\x00\x05\x00\x03\x00\x13\x00\x00\x00ubo\x00\x05\x00\x05\x00!\x00\x00\x00inPosition\x00\x00\x05\x00\x05\x00-\x00\x00\x00fragColor\x00\x00\x00\x05\x00\x04\x00/\x00\x00\x00inColor\x00\x05\x00\x06\x002\x00\x00\x00fragTexCoord\x00\x00\x00\x00\x05\x00\x05\x003\x00\x00\x00inTexCoord\x00\x00H\x00\x05\x00\v\x00\x00\x00\x00\x00\x00\x00\v\x00\x00\x00\x00\x00\x00\x00H\x00\x05\x00\v\x00\x00\x00\x01\x00\x00\x00\v\x00\x00\x00\x01\x00\x00\x00H\x00\x05\x00\v\x00\x00\x00\x02\x00\x00\x00\v\x00\x00\x00\x03\x00\x00\x00H\x00\x05\x00\v\x00\x00\x00\x03\x00\x00\x00\v\x00\x00\x00\x04\x00\x00\x00G\x00\x03\x00\v\x00\x00\x00\x02\x00\x00\x00H\x00\x04\x00\x11\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x00\x00\x00\x00\a\x00\x00\x00\x10\x00\x00\x00H\x00\x04\x00\x11\x00\x00\x00\x01\x00\x00\x00\x05\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x00@\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x01\x00\x00\x00\a\x00\x00\x00\x10\x00\x00\x00H\x00\x04\x00\x11\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x02\x00\x00\x00#\x00\x00\x00\x80\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x02\x00\x00\x00\a\x00\x00\x00\x10\x00\x00\x00G\x00\x03\x00\x11\x00\x00\x00\x02\x00\x00\x00G\x00\x04\x00\x13\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\x13\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00!\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00-\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00/\x00\x00\x00\x1e\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x002\x00\x00\x00\x1e\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x003\x00\x00\x00\x1e\x00\x00\x00\x02\x00\x00\x00\x13\x00\x02\x00\x02\x00\x00\x00!\x00\x03\x00\x03\x00\x00\x00\x02\x00\x00\x00\x16\x00\x03\x00\x06\x00\x00\x00 \x00\x00\x00\x17\x00\x04\x00\a\x00\x00\x00\x06\x00\x00\x00\x04\x00\x00\x00\x15\x00\x04\x00\b\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00+\x00\x04\x00\b\x00\x00\x00\t\x00\x00\x00\x01\x00\x00\x00\x1c\x00\x04\x00\n\x00\x00\x00\x06\x00\x00\x00\t\x00\x00\x00\x1e\x00\x06\x00\v\x00\x00\x00\a\x00\x00\x00\x06\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00 \x00\x04\x00\f\x00\x00\x00\x03\x00\x00\x00\v\x00\x00\x00;\x00\x04\x00\f\x00\x00\x00\r\x00\x00\x00\x03\x00\x00\x00\x15\x00\x04\x00\x0e\x00\x00\x00 \x00\x00\x00\x01\x00\x00\x00+\x00\x04\x00\x0e\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x18\x00\x04\x00\x10\x00\x00\x00\a\x00\x00\x00\x04\x00\x00\x00\x1e\x00\x05\x00\x11\x00\x00\x00\x10\x00\x00\x00\x10\x00\x00\x00\x10\x00\x00\x00 \x00\x04\x00\x12\x00\x00\x00\x02\x00\x00\x00\x11\x00\x00\x00;\x00\x04\x00\x12\x00\x00\x00\x13\x00\x00\x00\x02\x00\x00\x00+\x00\x04\x00\x0e\x00\x00\x00\x14\x00\x00\x00\x02\x00\x00\x00 \x00\x04\x00\x15\x00\x00\x00\x02\x00\x00\x00\x10\x00\x00\x00+\x00\x04\x00\x0e\x00\x00\x00\x18\x00\x00\x00\x01\x00\x00\x00\x17\x00\x04\x00\x1f\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00 \x00\x04\x00 \x00\x00\x00\x01\x00\x00\x00\x1f\x00\x00\x00;\x00\x04\x00 \x00\x00\x00!\x00\x00\x00\x01\x00\x00\x00+\x00\x04\x00\x06\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00+\x00\x04\x00\x06\x00\x00\x00$\x00\x00\x00\x00\x00\x80? \x00\x04\x00)\x00\x00\x00\x03\x00\x00\x00\a\x00\x00\x00\x17\x00\x04\x00+\x00\x00\x00\x06\x00\x00\x00\x03\x00\x00\x00 \x00\x04\x00,\x00\x00\x00\x03\x00\x00\x00+\x00\x00\x00;\x00\x04\x00,\x00\x00\x00-\x00\x00\x00\x03\x00\x00\x00 \x00\x04\x00.\x00\x00\x00\x01\x00\x00\x00+\x00\x00\x00;\x00\x04\x00.\x00\x00\x00/\x00\x00\x00\x01\x00\x00\x00 \x00\x04\x001\x00\x00\x00\x03\x00\x00\x00\x1f\x00\x00\x00;\x00\x04\x001\x00\x00\x002\x00\x00\x00\x03\x00\x00\x00;\x00\x04\x00 \x00\x00\x003\x00\x00\x00\x01\x00\x00\x006\x00\x05\x00\x02\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\xf8\x00\x02\x00\x05\x00\x00\x00A\x00\x05\x00\x15\x00\x00\x00\x16\x00\x00\x00\x13\x00\x00\x00\x14\x00\x00\x00=\x00\x04\x00\x10\x00\x00\x00\x17\x00\x00\x00\x16\x00\x00\x00A\x00\x05\x00\x15\x00\x00\x00\x19\x00\x00\x00\x13\x00\x00\x00\x18\x00\x00\x00=\x00\x04\x00\x10\x00\x00\x00\x1a\x00\x00\x00\x19\x00\x00\x00\x92\x00\x05\x00\x10\x00\x00\x00\x1b\x00\x00\x00\x17\x00\x00\x00\x1a\x00\x00\x00A\x00\x05\x00\x15\x00\x00\x00\x1c\x00\x00\x00\x13\x00\x00\x00\x0f\x00\x00\x00=\x00\x04\x00\x10\x00\x00\x00\x1d\x00\x00\x00\x1c\x00\x00\x00\x92\x00\x05\x00\x10\x00\x00\x00\x1e\x00\x00\x00\x1b\x00\x00\x00\x1d\x00\x00\x00=\x00\x04\x00\x1f\x00\x00\x00\"\x00\x00\x00!\x00\x00\x00Q\x00\x05\x00\x06\x00\x00\x00%\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00Q\x00\x05\x00\x06\x00\x00\x00&\x00\x00\x00\"\x00\x00\x00\x01\x00\x00\x00P\x00\a\x00\a\x00\x00\x00'\x00\x00\x00%\x00\x00\x00&\x00\x00\x00#\x00\x00\x00$\x00\x00\x00\x91\x00\x05\x00\a\x00\x00\x00(\x00\x00\x00\x1e\x00\x00\x00'\x00\x00\x00A\x00\x05\x00)\x00\x00\x00*\x00\x00\x00\r\x00\x00\x00\x0f\x00\x00\x00>\x00\x03\x00*\x00\x00\x00(\x00\x00\x00=\x00\x04\x00+\x00\x00\x000\x00\x00\x00/\x00\x00\x00>\x00\x03\x00-\x00\x00\x000\x00\x00\x00=\x00\x04\x00\x1f\x00\x00\x004\x00\x00\x003\x00\x00\x00>\x00\x03\x002\x00\x00\x004\x00\x00\x00\xfd\x00\x01\x008\x00\x01\x00")

func legacyVertSpvBytes() ([]byte, error) {
	return _legacyVertSpv, nil
}

func legacyVertSpv() (*asset, error) {
	bytes, err := legacyVertSpvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "legacy/vert.spv", size: 1800, mode: os.FileMode(420), modTime: time.Unix(1592157069, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _textFragSpv = []byte("\x03\x02#\a\x00\x00\x01\x00\a\x00\b\x00\x17\x00\x00\x00\x00\x00\x00\x00\x11\x00\x02\x00\x01\x00\x00\x00\v\x00\x06\x00\x01\x00\x00\x00GLSL.std.450\x00\x00\x00\x00\x0e\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00\x0f\x00\b\x00\x04\x00\x00\x00\x04\x00\x00\x00main\x00\x00\x00\x00\t\x00\x00\x00\x11\x00\x00\x00\x16\x00\x00\x00\x10\x00\x03\x00\x04\x00\x00\x00\a\x00\x00\x00\x03\x00\x03\x00\x02\x00\x00\x00\xc2\x01\x00\x00\x04\x00\t\x00GL_ARB_separate_shader_objects\x00\x00\x05\x00\x04\x00\x04\x00\x00\x00main\x00\x00\x00\x00\x05\x00\x05\x00\t\x00\x00\x00outColor\x00\x00\x00\x00\x05\x00\x05\x00\r\x00\x00\x00texSampler\x00\x00\x05\x00\x06\x00\x11\x00\x00\x00fragTexCoord\x00\x00\x00\x00\x05\x00\x05\x00\x16\x00\x00\x00fragColor\x00\x00\x00G\x00\x04\x00\t\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\r\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\r\x00\x00\x00!\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x00\x11\x00\x00\x00\x1e\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x00\x16\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x13\x00\x02\x00\x02\x00\x00\x00!\x00\x03\x00\x03\x00\x00\x00\x02\x00\x00\x00\x16\x00\x03\x00\x06\x00\x00\x00 \x00\x00\x00\x17\x00\x04\x00\a\x00\x00\x00\x06\x00\x00\x00\x04\x00\x00\x00 \x00\x04\x00\b\x00\x00\x00\x03\x00\x00\x00\a\x00\x00\x00;\x00\x04\x00\b\x00\x00\x00\t\x00\x00\x00\x03\x00\x00\x00\x19\x00\t\x00\n\x00\x00\x00\x06\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x03\x00\v\x00\x00\x00\n\x00\x00\x00 \x00\x04\x00\f\x00\x00\x00\x00\x00\x00\x00\v\x00\x00\x00;\x00\x04\x00\f\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x17\x00\x04\x00\x0f\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00 \x00\x04\x00\x10\x00\x00\x00\x01\x00\x00\x00\x0f\x00\x00\x00;\x00\x04\x00\x10\x00\x00\x00\x11\x00\x00\x00\x01\x00\x00\x00\x17\x00\x04\x00\x14\x00\x00\x00\x06\x00\x00\x00\x03\x00\x00\x00 \x00\x04\x00\x15\x00\x00\x00\x01\x00\x00\x00\x14\x00\x00\x00;\x00\x04\x00\x15\x00\x00\x00\x16\x00\x00\x00\x01\x00\x00\x006\x00\x05\x00\x02\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\xf8\x00\x02\x00\x05\x00\x00\x00=\x00\x04\x00\v\x00\x00\x00\x0e\x00\x00\x00\r\x00\x00\x00=\x00\x04\x00\x0f\x00\x00\x00\x12\x00\x00\x00\x11\x00\x00\x00W\x00\x05\x00\a\x00\x00\x00\x13\x00\x00\x00\x0e\x00\x00\x00\x12\x00\x00\x00>\x00\x03\x00\t\x00\x00\x00\x13\x00\x00\x00\xfd\x00\x01\x008\x00\x01\x00")

func textFragSpvBytes() ([]byte, error) {
	return _textFragSpv, nil
}

func textFragSpv() (*asset, error) {
	bytes, err := textFragSpvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "text/frag.spv", size: 692, mode: os.FileMode(420), modTime: time.Unix(1592157069, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _textVertSpv = []byte("\x03\x02#\a\x00\x00\x01\x00\a\x00\b\x005\x00\x00\x00\x00\x00\x00\x00\x11\x00\x02\x00\x01\x00\x00\x00\v\x00\x06\x00\x01\x00\x00\x00GLSL.std.450\x00\x00\x00\x00\x0e\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00\x0f\x00\v\x00\x00\x00\x00\x00\x04\x00\x00\x00main\x00\x00\x00\x00\r\x00\x00\x00!\x00\x00\x00-\x00\x00\x00/\x00\x00\x002\x00\x00\x003\x00\x00\x00\x03\x00\x03\x00\x02\x00\x00\x00\xc2\x01\x00\x00\x04\x00\t\x00GL_ARB_separate_shader_objects\x00\x00\x05\x00\x04\x00\x04\x00\x00\x00main\x00\x00\x00\x00\x05\x00\x06\x00\v\x00\x00\x00gl_PerVertex\x00\x00\x00\x00\x06\x00\x06\x00\v\x00\x00\x00\x00\x00\x00\x00gl_Position\x00\x06\x00\a\x00\v\x00\x00\x00\x01\x00\x00\x00gl_PointSize\x00\x00\x00\x00\x06\x00\a\x00\v\x00\x00\x00\x02\x00\x00\x00gl_ClipDistance\x00\x06\x00\a\x00\v\x00\x00\x00\x03\x00\x00\x00gl_CullDistance\x00\x05\x00\x03\x00\r\x00\x00\x00\x00\x00\x00\x00\x05\x00\a\x00\x11\x00\x00\x00UniformBufferObject\x00\x06\x00\x05\x00\x11\x00\x00\x00\x00\x00\x00\x00model\x00\x00\x00\x06\x00\x05\x00\x11\x00\x00\x00\x01\x00\x00\x00view\x00\x00\x00\x00\x06\x00\x05\x00\x11\x00\x00\x00\x02\x00\x00\x00proj\x00\x00\x00\x00\x05\x00\x03\x00\x13\x00\x00\x00ubo\x00\x05\x00\x05\x00!\x00\x00\x00inPosition\x00\x00\x05\x00\x05\x00-\x00\x00\x00fragColor\x00\x00\x00\x05\x00\x04\x00/\x00\x00\x00inColor\x00\x05\x00\x06\x002\x00\x00\x00fragTexCoord\x00\x00\x00\x00\x05\x00\x05\x003\x00\x00\x00inTexCoord\x00\x00H\x00\x05\x00\v\x00\x00\x00\x00\x00\x00\x00\v\x00\x00\x00\x00\x00\x00\x00H\x00\x05\x00\v\x00\x00\x00\x01\x00\x00\x00\v\x00\x00\x00\x01\x00\x00\x00H\x00\x05\x00\v\x00\x00\x00\x02\x00\x00\x00\v\x00\x00\x00\x03\x00\x00\x00H\x00\x05\x00\v\x00\x00\x00\x03\x00\x00\x00\v\x00\x00\x00\x04\x00\x00\x00G\x00\x03\x00\v\x00\x00\x00\x02\x00\x00\x00H\x00\x04\x00\x11\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x00\x00\x00\x00\a\x00\x00\x00\x10\x00\x00\x00H\x00\x04\x00\x11\x00\x00\x00\x01\x00\x00\x00\x05\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x00@\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x01\x00\x00\x00\a\x00\x00\x00\x10\x00\x00\x00H\x00\x04\x00\x11\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x02\x00\x00\x00#\x00\x00\x00\x80\x00\x00\x00H\x00\x05\x00\x11\x00\x00\x00\x02\x00\x00\x00\a\x00\x00\x00\x10\x00\x00\x00G\x00\x03\x00\x11\x00\x00\x00\x02\x00\x00\x00G\x00\x04\x00\x13\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00\x13\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00!\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00-\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00G\x00\x04\x00/\x00\x00\x00\x1e\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x002\x00\x00\x00\x1e\x00\x00\x00\x01\x00\x00\x00G\x00\x04\x003\x00\x00\x00\x1e\x00\x00\x00\x02\x00\x00\x00\x13\x00\x02\x00\x02\x00\x00\x00!\x00\x03\x00\x03\x00\x00\x00\x02\x00\x00\x00\x16\x00\x03\x00\x06\x00\x00\x00 \x00\x00\x00\x17\x00\x04\x00\a\x00\x00\x00\x06\x00\x00\x00\x04\x00\x00\x00\x15\x00\x04\x00\b\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00+\x00\x04\x00\b\x00\x00\x00\t\x00\x00\x00\x01\x00\x00\x00\x1c\x00\x04\x00\n\x00\x00\x00\x06\x00\x00\x00\t\x00\x00\x00\x1e\x00\x06\x00\v\x00\x00\x00\a\x00\x00\x00\x06\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00 \x00\x04\x00\f\x00\x00\x00\x03\x00\x00\x00\v\x00\x00\x00;\x00\x04\x00\f\x00\x00\x00\r\x00\x00\x00\x03\x00\x00\x00\x15\x00\x04\x00\x0e\x00\x00\x00 \x00\x00\x00\x01\x00\x00\x00+\x00\x04\x00\x0e\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x18\x00\x04\x00\x10\x00\x00\x00\a\x00\x00\x00\x04\x00\x00\x00\x1e\x00\x05\x00\x11\x00\x00\x00\x10\x00\x00\x00\x10\x00\x00\x00\x10\x00\x00\x00 \x00\x04\x00\x12\x00\x00\x00\x02\x00\x00\x00\x11\x00\x00\x00;\x00\x04\x00\x12\x00\x00\x00\x13\x00\x00\x00\x02\x00\x00\x00+\x00\x04\x00\x0e\x00\x00\x00\x14\x00\x00\x00\x02\x00\x00\x00 \x00\x04\x00\x15\x00\x00\x00\x02\x00\x00\x00\x10\x00\x00\x00+\x00\x04\x00\x0e\x00\x00\x00\x18\x00\x00\x00\x01\x00\x00\x00\x17\x00\x04\x00\x1f\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00 \x00\x04\x00 \x00\x00\x00\x01\x00\x00\x00\x1f\x00\x00\x00;\x00\x04\x00 \x00\x00\x00!\x00\x00\x00\x01\x00\x00\x00+\x00\x04\x00\x06\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00+\x00\x04\x00\x06\x00\x00\x00$\x00\x00\x00\x00\x00\x80? \x00\x04\x00)\x00\x00\x00\x03\x00\x00\x00\a\x00\x00\x00\x17\x00\x04\x00+\x00\x00\x00\x06\x00\x00\x00\x03\x00\x00\x00 \x00\x04\x00,\x00\x00\x00\x03\x00\x00\x00+\x00\x00\x00;\x00\x04\x00,\x00\x00\x00-\x00\x00\x00\x03\x00\x00\x00 \x00\x04\x00.\x00\x00\x00\x01\x00\x00\x00+\x00\x00\x00;\x00\x04\x00.\x00\x00\x00/\x00\x00\x00\x01\x00\x00\x00 \x00\x04\x001\x00\x00\x00\x03\x00\x00\x00\x1f\x00\x00\x00;\x00\x04\x001\x00\x00\x002\x00\x00\x00\x03\x00\x00\x00;\x00\x04\x00 \x00\x00\x003\x00\x00\x00\x01\x00\x00\x006\x00\x05\x00\x02\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\xf8\x00\x02\x00\x05\x00\x00\x00A\x00\x05\x00\x15\x00\x00\x00\x16\x00\x00\x00\x13\x00\x00\x00\x14\x00\x00\x00=\x00\x04\x00\x10\x00\x00\x00\x17\x00\x00\x00\x16\x00\x00\x00A\x00\x05\x00\x15\x00\x00\x00\x19\x00\x00\x00\x13\x00\x00\x00\x18\x00\x00\x00=\x00\x04\x00\x10\x00\x00\x00\x1a\x00\x00\x00\x19\x00\x00\x00\x92\x00\x05\x00\x10\x00\x00\x00\x1b\x00\x00\x00\x17\x00\x00\x00\x1a\x00\x00\x00A\x00\x05\x00\x15\x00\x00\x00\x1c\x00\x00\x00\x13\x00\x00\x00\x0f\x00\x00\x00=\x00\x04\x00\x10\x00\x00\x00\x1d\x00\x00\x00\x1c\x00\x00\x00\x92\x00\x05\x00\x10\x00\x00\x00\x1e\x00\x00\x00\x1b\x00\x00\x00\x1d\x00\x00\x00=\x00\x04\x00\x1f\x00\x00\x00\"\x00\x00\x00!\x00\x00\x00Q\x00\x05\x00\x06\x00\x00\x00%\x00\x00\x00\"\x00\x00\x00\x00\x00\x00\x00Q\x00\x05\x00\x06\x00\x00\x00&\x00\x00\x00\"\x00\x00\x00\x01\x00\x00\x00P\x00\a\x00\a\x00\x00\x00'\x00\x00\x00%\x00\x00\x00&\x00\x00\x00#\x00\x00\x00$\x00\x00\x00\x91\x00\x05\x00\a\x00\x00\x00(\x00\x00\x00\x1e\x00\x00\x00'\x00\x00\x00A\x00\x05\x00)\x00\x00\x00*\x00\x00\x00\r\x00\x00\x00\x0f\x00\x00\x00>\x00\x03\x00*\x00\x00\x00(\x00\x00\x00=\x00\x04\x00+\x00\x00\x000\x00\x00\x00/\x00\x00\x00>\x00\x03\x00-\x00\x00\x000\x00\x00\x00=\x00\x04\x00\x1f\x00\x00\x004\x00\x00\x003\x00\x00\x00>\x00\x03\x002\x00\x00\x004\x00\x00\x00\xfd\x00\x01\x008\x00\x01\x00")

func textVertSpvBytes() ([]byte, error) {
	return _textVertSpv, nil
}

func textVertSpv() (*asset, error) {
	bytes, err := textVertSpvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "text/vert.spv", size: 1800, mode: os.FileMode(420), modTime: time.Unix(1592157069, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"blendmap/frag.spv": blendmapFragSpv,
	"blendmap/vert.spv": blendmapVertSpv,
	"default/frag.spv":  defaultFragSpv,
	"default/vert.spv":  defaultVertSpv,
	"legacy/frag.spv":   legacyFragSpv,
	"legacy/vert.spv":   legacyVertSpv,
	"text/frag.spv":     textFragSpv,
	"text/vert.spv":     textVertSpv,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"blendmap": {nil, map[string]*bintree{
		"frag.spv": {blendmapFragSpv, map[string]*bintree{}},
		"vert.spv": {blendmapVertSpv, map[string]*bintree{}},
	}},
	"default": {nil, map[string]*bintree{
		"frag.spv": {defaultFragSpv, map[string]*bintree{}},
		"vert.spv": {defaultVertSpv, map[string]*bintree{}},
	}},
	"legacy": {nil, map[string]*bintree{
		"frag.spv": {legacyFragSpv, map[string]*bintree{}},
		"vert.spv": {legacyVertSpv, map[string]*bintree{}},
	}},
	"text": {nil, map[string]*bintree{
		"frag.spv": {textFragSpv, map[string]*bintree{}},
		"vert.spv": {textVertSpv, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
